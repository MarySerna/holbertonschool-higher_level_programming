 2-Divide a matrix.txt
===============================

Using ``matrix_divided`` function
------------------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    Test case #0: A test case without parameters
        >>> matrix_divided()
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    Test case #2: A test case with integer and float elements and float divider
        >>> matrix_divided([[1.0, -2.0, -3.0],[-4.0, 5.0, -6.0]], 3.0)
        [[0.33, -0.67, -1.0], [-1.33, 1.67, -2.0]]

    Test case #3: A test case with infinite elements to divide
        >>> matrix_divided([[1e400, 1e500, 1e600],[1e900, 1e800, 1e700]], 3)
        [[inf, inf, inf], [inf, inf, inf]]

   Test case #13: A test case with a string divider
        >>> matrix_divided([[1, 2, 54.0], [24, 35.5, 6]], 'Monty Python')
        Traceback (most recent call last):
        TypeError: div must be a number

    Test case #14: A test case with a zero as a divisor
        >>> matrix_divided([[10.0, 65, 37.0],[40, 15.0, 66]], 0)
        Traceback (most recent call last):
        ZeroDivisionError: division by zero

    Test case #15: A test case with inconsistent rows
        >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size
